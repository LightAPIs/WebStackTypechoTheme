name: build-release

on: 
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout/@v3
      - name: Set Up Python 3.9
        uses: actions/setup-python/@v3
        with:
          python-version: '3.9'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Read Name
        id: read_name
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./info.json
          property: name
      - name: Read Version
        id: read_version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./info.json
          property: version
      - name: Build Package
        run: python build.py
      - name: Create ChangeLog Text
        id: changelog_text
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config_file: .github/scripts/tag-changelog-config.js
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog_text.outputs.changes }}
          draft: false
          prerelease: false
      - name: Upload Release Tar Asset
        id: upload_release_tar_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/${{ steps.read_name.outputs.value }}_v${{ steps.read_version.outputs.value }}.tar.gz
          asset_name: ${{ steps.read_name.outputs.value }}_v${{ steps.read_version.outputs.value }}.tar.gz
          asset_content_type: application/gzip
      - name: Upload Release Zip Asset
        id: upload_release_zip_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/${{ steps.read_name.outputs.value }}_v${{ steps.read_version.outputs.value }}.zip
          asset_name: ${{ steps.read_name.outputs.value }}_v${{ steps.read_version.outputs.value }}.zip
          asset_content_type: application/zip
